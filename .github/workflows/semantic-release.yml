# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Semantic Release
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Python Poetry
        uses: abatilo/actions-poetry@v2.1.0
        with:
          poetry-version: 1.3.2
      - name: Configure poetry
        shell: bash
        run: python -m poetry config virtualenvs.in-project true
      - name: View poetry version
        run: poetry --version
      - name: Install dependencies and pre-commit
        run: python -m poetry install
      - uses: pre-commit/action@v3.0.0
      - uses: pre-commit-ci/lite-action@v1.0.1
        if: always()

  semantic-release:
    needs: pre-commit
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      # - name: Semantic Release
      #   run: |
      #     pip install python-semantic-release
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      #     semantic-release publish
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     repository_username: __token__
      #     repository_password: ${{ secrets.PYPI_TOKEN }}
      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository_username: __token__
          repository_password: ${{ secrets.PYPI_API_TOKEN }}
